В случаях, когда надо организовать последовательное выполнение одного и того же набора инструкций, удобно использовать программные циклы. 
Для программирования в оболочке доступны три вида циклов:
for — эта команда позволяет создавать циклы типа перебора значений
while — цикл, выполняющийся до тех пор, пока истинно некоторое условие
until — цикл, выполняющийся до тех пор, пока некоторое условие ложно
 
Допустим, что имеется набор значений, которые должны быть последовательно присвоены некоторой переменной, требующейся для произведения каких-либо операций. 
В этом случае удобно использовать команду for
#!/bin/bash
for DIR in /etc /tmp /var
do
  echo -n "Права доступа к $DIR "
  ls -ld $DIR | cut -c2-11
done
 
В данном сценарии переменная DIR последовательно принимает три значения: /etc, /tmp и /var. 
Это делает команда for, в которой список значений указан после in. Тело цикла начинается после команды do и ограничивается done.
Если в команде for не указан список значений директивой in, то переменная цикла будет принимать значения, соответствующие аргументам командной строки.
 
 
Перебор аргументов командной строки с помощью for.
В этом сценарии переменная DIR последовательно принимает значения аргументов.
#!/bin/bash
[ $# -lt 1 ] && exit 1
for DIR
do
    if [ -d $DIR ]; then
           echo -n "Права доступа к $DIR "
           ls -ld $DIR | cut -c2-11
    elif [ ! -e $DIR ]; then
           echo "$DIR не существует"
    fi
done
 
 
Для организации итеративных циклов удобно использовать команды while и until.
Сценарий из примера в цикле выводит значения от 1 до 5 раз в секунду.
#!/bin/bash
i=1
while [ $i -le 5 ]; do
      echo –n $i ‘ ‘ ; sleep 1
      i=$((i+1))
done
echo
 
Цикл while работает до тех пор, пока команда, указанная в качестве ее аргумента, возвращает успешный код завершения. 
Наоборот, until работает, пока команда-аргумент заканчивается неудачей.
 
 
В качестве примера приведем сценарий, последовательно удаляющий из полного доменного имени узла (FQDN) подстроки до первой точки. 
Сначала должно быть выведено полное имя узла, затем домен, потом родительский домен, и так далее, пока строка не станет пустой.
#!/bin/bash
HN=`hostname`
until [ -z $HN ]; do
      echo $HN
      HN=`echo -n $HN | tr '.' '\n' | sed '1d' | tr '\n' '.'`
done
 
В сценарии используется переменная HN, которой вначале присваивается значение — доменное имя узла. 
Затем из него в цикле удаляется подстрока от начала строки до первой встретившейся точки. 
Для этого в строке — имени узла точки сначала заменяются переводами строк, затем удаляется первая строка, и в заключение переводы строки снова заменяются точками.
Цикл until работает до тех пор, пока содержимое переменной HN не станет пустым.
