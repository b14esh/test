//Ответ
//true
//!false
// if true
//else if true
//12 == 12
//12 >=12
//12 == 12 && 5.9 == 5.9
//12 == 12 || 5.9 == 6.4

package main

import "fmt"

func main() {

	if true {
		// Блоки «if» выполняются в том случае, если условие при вычислении дает результат true (или СОДЕРЖИТ true)
		fmt.Println("true")
	}
	if false {
		// Если условие содержит false, блок не выполняется.
		fmt.Println("false")
	}
	if !false {
		//Оператор логического отрицания превращает false в true.
		fmt.Println("!false")
	}
	if true { //Выполняется ветвь «if»...
		fmt.Println("if true")
	} else { // поэтому ветвь «else» не выполняется
		fmt.Println("else")
	}
	if false { //Ветвь «if» не выполняется...
		fmt.Println("if false")
	} else if true { // поэтому МОЖЕТ выполняться ветвь «else if».
		fmt.Println("else if true")
	}
	if 12 == 12 { // Условие 12 == 12 дает true
		fmt.Println("12 == 12")
	}
	if 12 != 12 { // Значения РАВНЫ, поэтому условие равно false., не выполняем
		fmt.Println("12 != 12")
	}
	if 12 > 12 { //Число 12 НЕ больше самого себя..., не выполняем
		fmt.Println("12 > 12")
	}
	if 12 >= 12 { //.Но число 12 РАВНО самому себе
		fmt.Println("12 >= 12")
	}
	if 12 == 12 && 5.9 == 5.9 { //Оператор дает результат true, если истинны ОБА выражения
		fmt.Println("12 == 12 && 5.9 == 5.9")
	}
	if 12 == 12 && 5.9 == 6.4 { //Одно выражение ложно. Не будет выполненно
		fmt.Println("12 == 12 && 5.9 == 6.4")
	}
	if 12 == 12 || 5.9 == 6.4 { //Оператор || дает результат true, если истинно ХОТЯ БЫ ОДНО выражение.
		fmt.Println("12 == 12 || 5.9 == 6.4")
	}
}
