//Пора начинать проникаться искусством математики.
//Для этого вам предложено решить простейшую задачу - определить количество корней указанного уравнения.

//Напишите программу, которая принимает на вход три вещественных числа

// и отвечает на вопрос : сколько корней имеет соответствующее этим числам уравнение вида

//A(x*x) + Bx + C = 0

// 1.  если уравнение имеет 2 вещественных корня - вывести "два корня"
// 2. если уравнение имеет 1 корень (совпадающие  корни тоже считаются за один) - вывести "один корень"
// 3. если уравнение не имеет вещественных корней или не имеет решений - "корней нет"
// Гарантируется, что как минимум один из коэффициентов не равен нулю.

//Input 	Output
//2       два корня
//5
//2

//Input 	Output
//2       один корень
//4
//2

// Дискриминант
// D = B*B - 4*A*C
// A=0  Bx+c=0

// A!=0
//D > 0  - 2 корней
//D = 0  - 1 один
//D < 0  - 0 корней

// x = -C / B

// B!=0
// x = -C / B  корень 1

// B=0
// x=?  корней 0

package main

import (
	"fmt"
)

func main() {

	var (
		a float64
		b float64
		c float64
	)

	// Решаем уравнение
	//d := b*b - 4*a*c
	//if d < 0 {
	//	fmt.Printf("Решений нет.\n")
	//} else if d == 0 {
	//	x1 := -b / (2 * a)
	//	fmt.Printf("x1 = %.2f\n", x1)
	//} else {
	//	x2 := (-b + math.Sqrt(d)) / (2 * a)
	//	fmt.Printf("x2 = %.2f, x3 = %.2fi\n", x2, x2)
	//}

	fmt.Scan(&a, &b, &b)
	//a = 2
	//b = 5
	//c = 2

	//a = 2
	//b = 4
	//c = 2

	fmt.Println("A(x*x) + Bx + C")
	d := b*b - 4*a*c
	fmt.Printf("Находим дискриминант: %f \n", d)

	if d > 0 {
		fmt.Println("два корня")
	} else if d == 0 {
		fmt.Println("один корень")
	} else if d < 0 {
		fmt.Println("корней нет")
	}

}
