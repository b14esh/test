//Поздравляем! Вы стали вторым Илоном Маском и собираете космическую экспедицию на Юпитер!
//Ваш безупречный космический корабль долетит до Юпитера за пару дней, но вот беда - не все могут выдержать перегрузки на борту.
//А так как это самый первый запуск - вам нужны физически подготовленные люди.

//Вы собираете группу добровольцев и подвергаете их нагрузкам, имитирующим перегрузки при полете на корабле.
//После чего - измеряете пульс этих людей.
//В случае, если пульс кандидатов находится в диапазоне от 100 ударов в минуту до 140 (обе границы включительно) - вам подходит этот кандидат.

//Напишите программу, которая поможет вам решить проблему отбора кандидатов.

//Формат ввода
//Программа принимает на вход несколько вещественных чисел - значения пульса кандидатов (каждое с новой строки), в конце идет сигнал остановки - любое вещественное отрицательное число.

//Формат вывода
//Программа выводит следующую информацию - количество успешно отобранных кандидатов и на другой строке - минимальное и максимальное значение пульса отобранных кандидатов.

//Пример

//Ввод
//92.5
//120.4
//139.2
//140.0
//99.9
//-1

//Вывод
//3
//120.4 140.0

package main

import (
	"fmt"
)

func main() {

	var i float64
	var x int
	islicex := []float64{}

	fmt.Println("92.5\n120.4\n139.2\n140.0\n99.9\n-1")

outline:
	for {
		fmt.Scan(&i)
		switch {
		case i >= 100.0 && i <= 140.0:
			x++
			islicex = append(islicex, i)

		case i < 0:
			fmt.Printf("\n%d\n%0.1f %0.1f\n", x, islicex[0], islicex[len(islicex)-1])
			break outline

		}
	}

}
