//5-ая строка Паскаля

//Треугольник Паскаля - великое математическое явление, которое позволяет решать множество различных задач невообразимо простым способом.
//В частности, этот самый треугольник используется при разложении бинома Ньютона.

//Но мы не будем здесь лезть в детали, главное для нас - это кодинг.

//Напишите программу, которая принимает на вход натуральное число n∈N - номер строки, до которой включительно хочется получить тот самый великий треугольник Паскаля.

//На выходе - сам треугольник.

//Формат ввода
//Натуральное число n ∈ N

//Формат вывода
//Треугольник Паскаля до n-ой строки включительно

//Ввод
//3

//Вывод
//   1
//  1 1
// 1 2 1

//Натура́льные чи́сла (от лат. naturalis «естественный») — числа, возникающие естественным образом при счёте (1, 2, 3, 4, 5, 6, 7 и так далее).
//Последовательность всех натуральных чисел, расположенных в порядке возрастания, называется натуральным рядом

//Треугольник Паскаля представляет собой бесконечный треугольный массив биномиальных коэффициентов, в котором на вершине и по бокам находятся единицы,
//а каждое число из тела массива равно сумме двух расположенных над ним чисел.

//Биномы
//Бином — алгебраическое выражение, представляющее собой сумму (или разность) двух членов, скажем (a+b).
// Ещё Цзя Сянь составил треугольную таблицу биномиальных коэффициентов (a+b)n до n = 6, о чём нам стало известно из трактата Чжу Шицзе. У аль-Караджи есть разложения (a+b)3, (a-b)3 и (a+b)4.

//Так как коэффициенты со значением единицы не используются в алгебраических выражениях, 1a записано как a. Также a1 и b1 записаны как a и b, a0 и b0 равняются единице.

//Если мы допустим, что a = b = 1 в выражении (a+b)n, получим, что сумма каждой строки треугольника Паскаля равна степени 2, а именно 2n для n = 0, 1, 2, 3, 4, ...

//Если мы допустим, что a = 1 и b = (-1), тогда сумма каждой строки треугольника Паскаля будет равна нулю для n = 1, 2, 3, 4, ..., при этом 00 неопределён.
//Однако набор чисел в треугольнике подталкивает к предположению, что 00 = 1.

// Результат очевиден в строках с нечётными номерами из-за симметрии, но остаётся верным и в строках с чётными номерами.

//1

//1 – 1 = 0

//1 – 2 + 1 = 0

//1 – 3 + 3 – 1 = 0

//1 – 4 + 6 – 4 + 1 = 0

// https://habr.com/ru/companies/first/articles/786804/

package main

import "fmt"

func main() {

	var (
		rows        int
		paint_tring int = 1
	)

	fmt.Scan(&rows)

	for i := 0; i < rows; i++ {

		for j := 1; j <= rows-i; j++ {
			fmt.Print(" ")
		}

		for k := 0; k <= i; k++ {

			if k == 0 || i == 0 {
				paint_tring = 1
			} else {
				paint_tring = paint_tring * (i - k + 1) / k
			}

			fmt.Printf(" %d", paint_tring)
		}
		fmt.Println("")

	}

}
