1. GET запрос?
После отправки запроса сервер видит:
GET / HTTPS/1.1



2. Что такое web-сервер?
Часть hardware, спроектированная для линковки запросов
Часть software, спроектированная для обработки входящих запросов
Пример: Google/Yandex имеют огромное количество web-серверов для разных целей (поисковые запросы, такси, каршеринг, еда, Алиса, и т.д.)
Когда переходим на https://yandex.ru в любом браузере, мы что-то отправляем на web-сервер


3. Что отправляем?
При переходе на https://yandex.ru , браузер за нас отправляет следующий запрос:
GET / HTTPS/1.1
	Host: yandex.ru

4. GET запрос
После отправки запроса сервер видит:
HTTP verb       Протокол

       GET / HTTPS/1.1

    Путь

5. А дальше?
    Это все
    После того, как сервер видит запрос, выполняется код
    Сервер может интерпретировать GET запрос по-разному, в зависимости от логики программного кода

6. Что может вернуть? 
Ошибку, если пути не существует  
Ошибку, если протокол не поддерживается
Ошибку, если сервер не работает в данный момент
HTML кусок, который отрисует браузер
Текст в разных форматах
Ничего


7. В чем отличие?
Разные серверы отвечают по-разному
Сервер vk.com отвечает на GET запрос VK-HTML
Сервер yandex.ru отвечает YA-HTML
Twitter ответит Twitter-HTML
И т.д.


8. А что еще есть?
Переходя на любую страницу мы выполняем GET запрос
Но есть еще большое количество типов запросов, таких как POST, PUT, DELETE, UPDATE, OPTIONS, HEAD и т.д.
Каждый сервер отвечает на такие запросы по-своему
Но смысл всех этих запросов примерно одинаковы на всех серверах


9. HTTP verbs 
Http verb   Значение                                       Пример
GET         Вернуть данные                                 GET /book/1
POST        Получить данные и что-то с ними сделать        POST /book    data.json
PUT         Обновить данные                                PUT /book/1   data.json
DELETE      Удалить данные                                 DELETE /book/1
