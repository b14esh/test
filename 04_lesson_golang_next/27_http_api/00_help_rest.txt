1. Что такое REST Api?
Способ представления модели того, как web-сервер отвечает на клиентские запросы
Сервер отвечает не только данными
Сервер отвечает ресурсами
REST - Representational State Transfer (подход передачи состояния представления)
**API - Application Programming Interface (прикладной интерфейс взаимодействия приложения)


2. Что знаем?
Переходя по ссылке провоцируем GET запрос
Сервер обычно возвращает HTML код
Но может вернуть и другие объекты
Можем использовать не только GET запросы

3. Что такое REST Api?
Способ представления модели того, как web-сервер отвечает на клиентские запросы
Сервер отвечает не только данными
Сервер отвечает ресурсами


4. Что такое ресурс?
Очень похоже на класс в ООП
У севера есть несколько ресурсов, каждый ресурс поддерживает свой функционал


5. Про ресурсы
Ресурс Item
GET    /item/chair
POST   /item/chair + data.json
PUT    /item/chair + data.json
DELETE /item/chair



6. Независимость (Stateless)
Одним из ключевых принципов REST является Stateless
Это означает, что ни один запрос не зависит от другого
Сервер единовременно знает что-то только про один запрос, но не знает/не помнит про предыдущие

7. Stateless , пример
POST /item/chair + data.json - создает некий стул и сохраняет в БД
Теперь сервер не знает, существует ли тот стул
GET /item/chair - теперь сервер идет в БД и проверяет, есть ли у него этот стул


8. А как проверить что запрос дошел?
Статус коды (status codes)
200 (OK) - часто приходит в ответ на GET запрос
201 (Created) - часто приходит в ответ на POST запрос
401 (Unauthorized)  - ответ на запрос по ресурсу, где требуется аутентификация (для неаутентифицированного клиента)
500 (Internal Server Error) - внутренняя ошибка сервера
И т.д.
